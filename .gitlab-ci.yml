image: node:latest

stages:
  - artifact
  - deploy

before_script:
  - eval "$(ssh-agent -s)"
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - >/dev/null
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - cp "$SSH_KNOWN_HOSTS" ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts

deploy_staging:
  stage: deploy
  only:
    refs:
      - dev
  script:
    - ./scripts/build-tar.sh --env dev
    - cat file.tar.xz | ssh ${USER_CLOUD_STAGING}@${HOST_CLOUD_STAGING} 'cd ~/www/sb.im/sdwc && find . ! -name 'config.json*' -delete && tar -xJf -'

deploy_production:
  stage: deploy
  only:
    refs:
      - master
  script:
    - ./scripts/build-tar.sh
    - cat file.tar.xz | ssh ${USER_CLOUD_PRODUCTION}@${HOST_CLOUD_PRODUCTION} 'cd ~/sdwc && find . ! -name 'config.json*' -delete && tar -xJf -'

build docker:
  image: docker:20.10.5
  stage: artifact
  services:
    - docker:20.10.5-dind
  before_script:
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
  variables:
    CONTAINER_IMAGE: ${CI_REGISTRY_IMAGE}/${CI_COMMIT_REF_NAME}
  script:
    - docker pull ${CONTAINER_IMAGE}:latest || true
    - docker build --cache-from ${CONTAINER_IMAGE}:latest --tag ${CONTAINER_IMAGE}:latest --tag ${CONTAINER_IMAGE}:${CI_COMMIT_SHORT_SHA} .
    - docker push ${CONTAINER_IMAGE}:${CI_COMMIT_SHORT_SHA}
    - docker push ${CONTAINER_IMAGE}:latest

